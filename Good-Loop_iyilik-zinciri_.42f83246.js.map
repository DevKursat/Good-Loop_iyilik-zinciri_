{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,CEGA,G,M,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,EDHA,EAAA,OAAA,CAAkB,MAAA,CAAmB,SAAU,IAAI,CAAC,IAAM,EAAc,S,GCGpE,OAAO,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAgB,CAClD,GAAM,CAAA,cAAE,CAAa,CAAA,iBAAE,CAAgB,CAAE,CAAG,MAA5C,EAAA,SACM,EAAe,SAAS,cAAc,CAAC,wBAEvC,EAAe,AADH,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM,EAC7B,GAAG,CAAC,SAC7B,EAAY,SAAS,cAAc,CAAC,sBACpC,EAAc,EAAU,aAAa,CAAC,iBACtC,EAAW,SAAS,cAAc,CAAC,YAErC,CAAA,GAAc,CAAA,EAAa,WAAW,CAAG,CAA7C,EAEA,SAAS,cAAc,CAAC,eAAe,gBAAgB,CAAC,SAAU,MAAO,IACrE,EAAE,cAAc,GAChB,IAAM,EAAO,SAAS,cAAc,CAAC,qBAAqB,KAAK,CAC/D,GAAI,CAAC,GAAgB,CAAC,EAAM,OAAO,MAAM,sCACzC,GAAI,CACA,MAAM,EAAc,CAAE,SAAU,EAAc,iBAAkB,CAAK,GACrE,MAAM,qDACN,OAAO,QAAQ,CAAC,IAAI,CAAG,CAAA,EAAG,cAAc,UAAU,CAAC,AACvD,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,oBAAqB,GACnC,MAAM,EAAM,OAAO,CACvB,CACJ,GAEA,IAAM,EAAmB,KACrB,EAAU,QAAQ,CAAG,CAAA,EACrB,EAAY,KAAK,CAAC,UAAU,CAAG,OAC/B,EAAY,KAAK,CAAC,KAAK,CAAG,KAE1B,WAAW,KACP,EAAY,KAAK,CAAC,UAAU,CAAG,mBAC/B,EAAY,KAAK,CAAC,KAAK,CAAG,MAC9B,EAAG,IAEH,WAAW,KACP,EAAU,QAAQ,CAAG,CAAA,CACzB,EAAG,IACP,EAEA,EAAU,gBAAgB,CAAC,QAAS,MAAO,IAEvC,GADA,EAAE,cAAc,GACZ,EAAU,QAAQ,CAAE,CACpB,EAAS,KAAK,CAAC,OAAO,CAAG,QACzB,WAAW,KAAQ,EAAS,KAAK,CAAC,OAAO,CAAG,MAAQ,EAAG,KACvD,MACJ,CACA,GAAI,CAAC,EAAc,OAAO,MAAM,8BAChC,GAAI,CACA,MAAM,EAAiB,CAAE,SAAU,CAAa,GAChD,MAAM,sFACN,GACJ,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,+BAAgC,GAC9C,MAAM,EAAM,OAAO,CACvB,CACJ,GAEA,GACJ","sources":["<anon>","../../../.npm/_npx/b4a9aa12c0cf34a6/node_modules/@parcel/runtime-js/lib/runtime-985f6fc5eeb5de07.js","script.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire2757\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire2757\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"8Wpxu\", function(module, exports) {\nmodule.exports = import(\"6fEqA\").then(()=>parcelRequire('brE3Z'));\n\n});\n\n// ... (other page logic remains the same)\n// --- Logic for verify.html ---\n\nif (window.location.pathname.includes('verify.html')) {\n    const { confirmSignUp: confirmSignUp, resendSignUpCode: resendSignUpCode } = await (parcelRequire(\"8Wpxu\"));\n    const emailDisplay = document.getElementById('verify-email-display');\n    const urlParams = new URLSearchParams(window.location.search);\n    const emailFromUrl = urlParams.get('email');\n    const resendBtn = document.getElementById('resend-code-button');\n    const progressBar = resendBtn.querySelector('.progress-bar');\n    const infoNote = document.getElementById('info-note');\n    if (emailFromUrl) emailDisplay.textContent = emailFromUrl;\n    document.getElementById('verify-form').addEventListener('submit', async (e)=>{\n        e.preventDefault();\n        const code = document.getElementById('verification-code').value;\n        if (!emailFromUrl || !code) return alert(\"E-posta veya do\\u011Frulama kodu eksik.\");\n        try {\n            await confirmSignUp({\n                username: emailFromUrl,\n                confirmationCode: code\n            });\n            alert(\"E-posta ba\\u015Far\\u0131yla do\\u011Fruland\\u0131! L\\xfctfen giri\\u015F yap\\u0131n.\");\n            window.location.href = `${getBasePath()}index.html`;\n        } catch (error) {\n            console.error(\"Do\\u011Frulama hatas\\u0131:\", error);\n            alert(error.message);\n        }\n    });\n    const startResendTimer = ()=>{\n        resendBtn.disabled = true;\n        progressBar.style.transition = 'none';\n        progressBar.style.width = '0%';\n        setTimeout(()=>{\n            progressBar.style.transition = `width 90s linear`;\n            progressBar.style.width = '100%';\n        }, 50);\n        setTimeout(()=>{\n            resendBtn.disabled = false;\n        }, 90000);\n    };\n    resendBtn.addEventListener('click', async (e)=>{\n        e.preventDefault();\n        if (resendBtn.disabled) {\n            infoNote.style.display = 'block';\n            setTimeout(()=>{\n                infoNote.style.display = 'none';\n            }, 3000); // Mesajı 3 saniye sonra gizle\n            return;\n        }\n        if (!emailFromUrl) return alert(\"E-posta adresi bulunamad\\u0131.\");\n        try {\n            await resendSignUpCode({\n                username: emailFromUrl\n            });\n            alert(\"Do\\u011Frulama kodu tekrar g\\xf6nderildi. Spam (gereksiz) klas\\xf6r\\xfcn\\xfc kontrol etmeyi unutma.\");\n            startResendTimer();\n        } catch (error) {\n            console.error(\"Kodu tekrar g\\xf6nderme hatas\\u0131:\", error);\n            alert(error.message);\n        }\n    });\n    startResendTimer(); // Sayfa yüklendiğinde sayacı başlat\n} // ... (rest of the script.js file remains the same)\n\n\n//# sourceMappingURL=Good-Loop_iyilik-zinciri_.42f83246.js.map\n","module.exports = (__parcel__import__(\"6fEqA\")).then(() => parcelRequire('brE3Z'));","// ... (other page logic remains the same)\n\n// --- Logic for verify.html ---\nif (window.location.pathname.includes('verify.html')) {\n    const { confirmSignUp, resendSignUpCode } = await import('aws-amplify/auth');\n    const emailDisplay = document.getElementById('verify-email-display');\n    const urlParams = new URLSearchParams(window.location.search);\n    const emailFromUrl = urlParams.get('email');\n    const resendBtn = document.getElementById('resend-code-button');\n    const progressBar = resendBtn.querySelector('.progress-bar');\n    const infoNote = document.getElementById('info-note');\n\n    if (emailFromUrl) emailDisplay.textContent = emailFromUrl;\n\n    document.getElementById('verify-form').addEventListener('submit', async (e) => {\n        e.preventDefault();\n        const code = document.getElementById('verification-code').value;\n        if (!emailFromUrl || !code) return alert('E-posta veya doğrulama kodu eksik.');\n        try {\n            await confirmSignUp({ username: emailFromUrl, confirmationCode: code });\n            alert('E-posta başarıyla doğrulandı! Lütfen giriş yapın.');\n            window.location.href = `${getBasePath()}index.html`;\n        } catch (error) {\n            console.error('Doğrulama hatası:', error);\n            alert(error.message);\n        }\n    });\n\n    const startResendTimer = () => {\n        resendBtn.disabled = true;\n        progressBar.style.transition = 'none';\n        progressBar.style.width = '0%';\n        \n        setTimeout(() => {\n            progressBar.style.transition = `width 90s linear`;\n            progressBar.style.width = '100%';\n        }, 50);\n\n        setTimeout(() => {\n            resendBtn.disabled = false;\n        }, 90000);\n    };\n\n    resendBtn.addEventListener('click', async (e) => {\n        e.preventDefault();\n        if (resendBtn.disabled) {\n            infoNote.style.display = 'block';\n            setTimeout(() => { infoNote.style.display = 'none'; }, 3000); // Mesajı 3 saniye sonra gizle\n            return;\n        }\n        if (!emailFromUrl) return alert('E-posta adresi bulunamadı.');\n        try {\n            await resendSignUpCode({ username: emailFromUrl });\n            alert('Doğrulama kodu tekrar gönderildi. Spam (gereksiz) klasörünü kontrol etmeyi unutma.');\n            startResendTimer();\n        } catch (error) {\n            console.error('Kodu tekrar gönderme hatası:', error);\n            alert(error.message);\n        }\n    });\n\n    startResendTimer(); // Sayfa yüklendiğinde sayacı başlat\n}\n\n// ... (rest of the script.js file remains the same)\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","then","window","location","pathname","includes","confirmSignUp","resendSignUpCode","emailDisplay","document","getElementById","emailFromUrl","urlParams","URLSearchParams","search","get","resendBtn","progressBar","querySelector","infoNote","textContent","addEventListener","e","preventDefault","value","alert","username","confirmationCode","href","getBasePath","error","console","message","startResendTimer","disabled","style","transition","width","setTimeout","display"],"version":3,"file":"Good-Loop_iyilik-zinciri_.42f83246.js.map"}