import 'buffer';
import 'process';
import { Amplify } from 'aws-amplify';
import { signIn, signUp, confirmSignUp, resendSignUpCode, signOut } from 'aws-amplify/auth';
import amplifyconfig from './src/amplifyconfiguration.json';

/* eslint-disable */
// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.

Amplify.configure(amplifyconfig);

// Common elements for both pages
const currentPath = window.location.pathname;

// Logic for index.html (Login/Signup Page)
if (currentPath.includes('index.html') || currentPath === '/') {
    const container = document.getElementById('auth-container-animated');
    const registerBtn = document.getElementById('register');
    const loginBtn = document.getElementById('login');
    const showLoginMobileBtn = document.getElementById('show-login-mobile');
    const showSignupMobileBtn = document.getElementById('show-signup-mobile');

    const signupPasswordInput = document.getElementById('signup-password');
    const strengthBar = document.querySelector('.strength-bar');
    const lengthCheck = document.getElementById('length-check');
    const uppercaseCheck = document.getElementById('uppercase-check');
    const lowercaseCheck = document.getElementById('lowercase-check');
    const numberCheck = document.getElementById('number-check');
    const specialCheck = document.getElementById('special-check');

    const toggleForm = (isRegister) => {
        if (container) {
            if (isRegister) {
                container.classList.add('active');
            } else {
                container.classList.remove('active');
            }
        }
    };

    if (registerBtn) {
        registerBtn.addEventListener('click', () => toggleForm(true));
    }

    if (loginBtn) {
        loginBtn.addEventListener('click', () => toggleForm(false));
    }

    if (showLoginMobileBtn) {
        showLoginMobileBtn.addEventListener('click', (e) => {
            e.preventDefault();
            toggleForm(false);
        });
    }

    if (showSignupMobileBtn) {
        showSignupMobileBtn.addEventListener('click', (e) => {
            e.preventDefault();
            toggleForm(true);
        });
    }

    // Password Strength Logic
    if (signupPasswordInput) {
        signupPasswordInput.addEventListener('input', () => {
            const password = signupPasswordInput.value;
            let strength = 0;

            // Length check
            if (password.length >= 8) {
                lengthCheck.classList.remove('invalid');
                lengthCheck.classList.add('valid');
                strength++;
            } else {
                lengthCheck.classList.remove('valid');
                lengthCheck.classList.add('invalid');
            }

            // Uppercase check
            if (/[A-Z]/.test(password)) {
                uppercaseCheck.classList.remove('invalid');
                uppercaseCheck.classList.add('valid');
                strength++;
            } else {
                uppercaseCheck.classList.remove('valid');
                uppercaseCheck.classList.add('invalid');
            }

            // Lowercase check
            if (/[a-z]/.test(password)) {
                lowercaseCheck.classList.remove('invalid');
                lowercaseCheck.classList.add('valid');
                strength++;
            } else {
                lowercaseCheck.classList.remove('valid');
                lowercaseCheck.classList.add('invalid');
            }

            // Number check
            if (/[0-9]/.test(password)) {
                numberCheck.classList.remove('invalid');
                numberCheck.classList.add('valid');
                strength++;
            } else {
                numberCheck.classList.remove('valid');
                numberCheck.classList.add('invalid');
            }

            // Special character check
            if (/[!@#$%^&*]/.test(password)) {
                specialCheck.classList.remove('invalid');
                specialCheck.classList.add('valid');
                strength++;
            } else {
                specialCheck.classList.remove('valid');
                specialCheck.classList.add('invalid');
            }

            // Update strength bar
            const strengthPercentage = (strength / 5) * 100;
            strengthBar.style.width = `${strengthPercentage}%`;

            strengthBar.classList.remove('weak', 'medium', 'strong');
            if (strengthPercentage < 40) {
                strengthBar.classList.add('weak');
            } else if (strengthPercentage < 80) {
                strengthBar.classList.add('medium');
            } else {
                strengthBar.classList.add('strong');
            }
        });
    }

    // Form submission logic (Amplify)
    const loginForm = document.getElementById('login-form');
    const signupForm = document.getElementById('signup-form');

    if (loginForm) {
        loginForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const email = document.getElementById('login-email').value;
            const password = document.getElementById('login-password').value;
            try {
                await signIn({ username: email, password });
                alert('Giriş başarılı!');
                window.location.href = 'home.html';
            } catch (error) {
                console.error('Giriş hatası:', error);
                if (error.name === 'UserNotConfirmedException') {
                    alert('Hesabınız doğrulanmamış. Lütfen e-postanızı doğrulayın.');
                    // Redirect to verification page with email
                    window.location.href = `verify.html?email=${encodeURIComponent(email)}`;
                } else {
                    alert(error.message);
                }
            }
        });
    }

    if (signupForm) {
        signupForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const email = document.getElementById('signup-email').value;
            const password = document.getElementById('signup-password').value;
            try {
                await signUp({ username: email, password, attributes: { email } });
                alert('Kayıt başarılı! Lütfen e-postanıza gönderilen doğrulama linkine tıklayın.');
                // Redirect to verification page with email
                window.location.href = `verify.html?email=${encodeURIComponent(email)}`;
            } catch (error) {
                console.error('Kayıt hatası:', error);
                alert(error.message);
            }
        });
    }
}

// Logic for verify.html (Email Verification Page)
if (currentPath.includes('verify.html')) {
    const verifyForm = document.getElementById('verify-form');
    const verifyEmailInput = document.getElementById('verify-email');
    const verificationCodeInput = document.getElementById('verification-code');
    const resendCodeButton = document.getElementById('resend-code-button');

    // Pre-fill email if available from URL
    const urlParams = new URLSearchParams(window.location.search);
    const emailFromUrl = urlParams.get('email');
    if (emailFromUrl) {
        verifyEmailInput.value = emailFromUrl;
    }

    if (verifyForm) {
        verifyForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const email = verifyEmailInput.value;
            const code = verificationCodeInput.value;
            try {
                await confirmSignUp({ username: email, confirmationCode: code });
                alert('E-posta başarıyla doğrulandı! Şimdi giriş yapabilirsiniz.');
                // Automatically sign in after successful confirmation
                const password = prompt('Doğrulama başarılı. Lütfen şifrenizi girerek giriş yapın:');
                if (password) {
                    await signIn({ username: email, password });
                    window.location.href = 'home.html';
                } else {
                    alert('Şifre girilmedi. Lütfen tekrar giriş yapın.');
                    window.location.href = 'index.html'; // Go back to login page
                }
            } catch (error) {
                console.error('Doğrulama hatası:', error);
                alert(error.message);
            }
        });
    }

    if (resendCodeButton) {
        resendCodeButton.addEventListener('click', async () => {
            const email = verifyEmailInput.value;
            if (!email) {
                alert('Lütfen e-posta adresinizi girin.');
                return;
            }
            try {
                await resendSignUpCode({ username: email });
                alert('Doğrulama kodu tekrar gönderildi.');
            } catch (error) {
                console.error('Kodu tekrar gönderme hatası:', error);
                alert(error.message);
            }
        });
    }
}

// Logic for home.html (Home Page)
if (currentPath.includes('home.html')) {
    const logoutButton = document.getElementById('logout-button');

    if (logoutButton) {
        logoutButton.addEventListener('click', async () => {
            try {
                await signOut();
                alert('Başarıyla çıkış yapıldı.');
                window.location.href = 'index.html';
            } catch (error) {
                console.error('Çıkış yapma hatası:', error);
                alert(error.message);
            }
        });
    }
}